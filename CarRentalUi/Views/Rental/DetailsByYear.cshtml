@model CarRentalUi.Models.ViewModels.RentalDetailsYearViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Year overview @Model.Year for @Model.RegistrationNumber</h2>

<div class="row">
    <div class="col-md-12">
        <div class="col-md-4">
            <h3>Total:</h3>
            <p>Total amount: @Math.Round(Model.AggregatedData.TotalAmount, 2) NOK</p>
            <p>Total amount ex tax: @Math.Round(Model.AggregatedData.TotalAmountExTax, 2) NOK</p>
            <p>Total tax result: @Math.Round(Model.AggregatedData.TotalTaxResult, 2) NOK</p>
            <p>Average amount per day: @Math.Round(Model.AggregatedData.AverageAmountPerDays, 2) NOK/day</p>
            <p>Average days per rent: @Math.Round(Model.AggregatedData.AverageDaysPerRent, 2) days/rent</p>
            <p>Average milage per day: @Math.Round(Model.AggregatedData.AverageMilagePerDay, 2) km/day</p>
            <p>Average milage per rent: @Math.Round(Model.AggregatedData.AverageMilagePerRent, 2) km/rent</p>
            <p>Average price per kilometer: @Math.Round(Model.AggregatedData.AveragePricePerKilometer, 2) NOK/km</p>
            <p>Number of bookings: @Model.AggregatedData.NumberOfBookings </p>
            <p>Number of days rented: @Math.Round(Model.AggregatedData.NumberOfDaysRented, 2) </p>
        </div>
    </div>
</div>

<table class="table">
    <tr>
        <th>
            Month
        </th>
        <th>
            Number of rents
        </th>
        <th>
            Rentaldays
        </th>
        <th>
            Total amount
        </th>
        <th>
            Total milage
        </th>
        <th>
            NOK/km
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Month)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Value)
        </td>
        <td>
            @Model.Rentals.Where(a => a.Month == item.Key).Count()
        </td>
        <td>
            @Model.Rentals.Where(a => a.Month == item.Key).Select(b =>
       {
           var days = (b.Delivery - b.Pickup).TotalDays;
           var daysRounded = Math.Floor(days);
           var diff = days - daysRounded;
           var extraDays = diff >= 0.125 ? 1 : 0;
           return extraDays + daysRounded;
       }).Sum(c => c)
        </td>
        <td>
            @Model.Rentals.Where(a => a.Month == item.Key).Sum(b => b.AmountNet + b.ExcessMileage)
        </td>
        <td>
            @Model.Rentals.Where(a => a.Month == item.Key).Sum(b => b.Mileage)
        </td>
        <td>
            @Math.Round(@Model.Rentals.Where(a => a.Month == item.Key).Sum(b => b.AmountNet + b.ExcessMileage) / Model.Rentals.Where(a => a.Month == item.Key).Sum(b => b.Mileage), 2)
        </td>
        <td>
            @Html.ActionLink("More Details", "DetailsByYearAndMonth", new { id = Model.RegistrationNumber, year = Model.Year, month = item.Key })
        </td>
    </tr>
    }

</table>